{%- if root_namespace not in excluded_namespaces -%}
{%- set filtered_attributes = attributes_and_templates | select(filter) | list -%}
{%- if filtered_attributes | count > 0 -%}
# Copyright The OpenTelemetry Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# pylint: disable=too-many-lines

{%- set filtered_enum_attributes = enum_attributes | select(filter) | list %}
{%- if filtered_enum_attributes | count > 0 %}

from enum import Enum
{%- endif %}

{%- for attribute in filtered_attributes %}

{% if attribute | is_template %}
{{attribute.fqn | to_const_name}}_TEMPLATE = "{{attribute.fqn}}"
{%- else %}
{{attribute.fqn | to_const_name}} = "{{attribute.fqn}}"
{%- endif %}
"""
{{attribute.brief | to_doc_brief}}.
{%- if attribute.note %}
Note: {{attribute.note | to_doc_brief | indent}}.
{%- endif %}

{%- if attribute | is_deprecated %}
Deprecated: {{attribute.deprecated | to_doc_brief}}.
{%- endif %}
"""
{%- endfor %}
{# Extra line #}
{# Extra line #}
{%- for attribute in filtered_enum_attributes -%}
{%- set class_name = attribute.fqn | to_camelcase(True) ~ "Values" -%}
class {{class_name}}(Enum):
    {%- for member in attribute.attr_type.members %}
    {{ member.member_id | to_const_name }} = {{ attribute | print_member_value(member) }}
    """{{member.brief | to_doc_brief}}."""
{# Extra line #}
    {%- endfor -%}
{# Extra line #}
{%- endfor -%}
{%- endif -%}
{%- endif -%}